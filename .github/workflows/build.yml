name: 'Build and Test'

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Test build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Build
        run: npm run build
      - name: Check bundle size
        run: |
          ls -la dist/
          echo "Bundle size:"
          du -h dist/fluid-level-background-card.js
          # Fail if bundle is too large (> 500KB)
          BUNDLE_SIZE=$(du -k dist/fluid-level-background-card.js | cut -f1)
          if [ $BUNDLE_SIZE -gt 500 ]; then
            echo "‚ùå Bundle size ($BUNDLE_SIZE KB) exceeds 500KB limit"
            exit 1
          else
            echo "‚úÖ Bundle size ($BUNDLE_SIZE KB) is within limits"
          fi

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Run unit tests with coverage
        run: npm run test:coverage
        env:
          CI: true
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read coverage summary if it exists
            const coveragePath = 'coverage/coverage-summary.json';
            if (fs.existsSync(coveragePath)) {
              const coverage = JSON.parse(fs.readFileSync(coveragePath, 'utf8'));
              const total = coverage.total;
              const percentage = total.lines.pct;
              
              const comment = `## üìä Test Coverage Report
              
              **Total Coverage: ${percentage}%**
              
              | Metric | Covered | Total | Percentage |
              |--------|---------|-------|------------|
              | Lines | ${total.lines.covered} | ${total.lines.total} | ${total.lines.pct}% |
              | Functions | ${total.functions.covered} | ${total.functions.total} | ${total.functions.pct}% |
              | Branches | ${total.branches.covered} | ${total.branches.total} | ${total.branches.pct}% |
              | Statements | ${total.statements.covered} | ${total.statements.total} | ${total.statements.pct}% |
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Build card
        run: npm run build
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Start test environment
        run: |
          docker compose -f docker-compose.test.yml up -d
          # Wait for Home Assistant to be ready
          timeout 300 bash -c 'until curl -f http://localhost:8123; do sleep 5; done'
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          CI: true
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7
      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.test.yml down
